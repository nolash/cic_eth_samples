{
  "contractName": "FooToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "standard",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "name": "_supply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdate",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\"},\"approve(address,uint256)\":{\"details\":\"allow another account/contract to spend some tokens on your behalf throws on any error rather then return a false flag to minimize user errors also, to minimize the risk of the approve/transferFrom attack vector (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/), approve has to be called twice in 2 separate transactions - once to change the allowance to 0 and secondly to change it to the new allowance value\",\"params\":{\"_spender\":\"approved address\",\"_value\":\"allowance amount\"},\"return\":\"true if the approval was successful, false if it wasn't\"},\"transfer(address,uint256)\":{\"details\":\"send coins throws on any error rather then return a false flag to minimize user errors\",\"params\":{\"_to\":\"target address\",\"_value\":\"transfer amount\"},\"return\":\"true if the transfer was successful, false if it wasn't\"},\"transferFrom(address,address,uint256)\":{\"details\":\"an account/contract attempts to get the coins throws on any error rather then return a false flag to minimize user errors\",\"params\":{\"_from\":\"source address\",\"_to\":\"target address\",\"_value\":\"transfer amount\"},\"return\":\"true if the transfer was successful, false if it wasn't\"},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner\",\"params\":{\"_newOwner\":\"new contract owner\"}},\"withdrawTokens(address,address,uint256)\":{\"details\":\"withdraws tokens held by the contract and sends them to an account can only be called by the owner\",\"params\":{\"_amount\":\"amount to withdraw\",\"_to\":\"account to receive the new amount\",\"_token\":\"ERC20 token contract address\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/lash/src/ext/sempo/contracts/solidity/contracts/aux/FooToken.sol\":\"FooToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/lash/src/ext/sempo/contracts/solidity/contracts/aux/FooToken.sol\":{\"keccak256\":\"0x2670f910b5f8dd949b4335189139b84c77e8798b7e3501db1ac87a1b8ac37819\",\"urls\":[\"bzzr://05b7c58f0cb4d209383d8d59bf6de4ecebce518fc4c1ca825073fedccd1267b3\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/token/ERC20Token.sol\":{\"keccak256\":\"0x01401b75cf9a71036c4f9ae3276ce71d69954faeb0b94780eec6c35c74a5ecc4\",\"urls\":[\"bzzr://ed5d0b31393ab327d58aa05420d6a321dbaf28d438a82b2503ecee5508bafd2e\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/token/interfaces/IERC20Token.sol\":{\"keccak256\":\"0x465f98ed290fb4f65f2d74e938f47c2fa9f7302e766266d8f9326d4c703d5ce3\",\"urls\":[\"bzzr://9746fbda9ee3a4d1e0ed3c5f5d27ebb93114139ad29ae04f313de057f9d1bc92\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/token/interfaces/INonStandardERC20.sol\":{\"keccak256\":\"0x26596dd8e564493f7e821102865fb382c21bbedd44ebc920c8d63626f1bf19dc\",\"urls\":[\"bzzr://c750029c9ba7521fbe0c1827a4854a4b8db274d4402e00daaa4683a024c44d93\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/Owned.sol\":{\"keccak256\":\"0x78745ba2880b46edbd793166c7248b8ed9741189fbafb7ecc4fc83423140c415\",\"urls\":[\"bzzr://5c16b883804782ae67dcca47fcf7ec6564f109c6d165688ca4587d8723f570be\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/SafeMath.sol\":{\"keccak256\":\"0x385d831e4117feb02404ed5d061fbc86f4870b48aa831ae1985bf0508a18b201\",\"urls\":[\"bzzr://64f79e24c11751864d5708d8ca216e975cc3461601cee31b70941c2559419d55\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/TokenHolder.sol\":{\"keccak256\":\"0xfe8d6270e44c4c1cb3424091bd1d95bfd0154c6a386707f8dd718e641df7b281\",\"urls\":[\"bzzr://956209cf3031454f6881146373dc67215b02d9fd75bf927df42fa11d3ee66b06\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/Utils.sol\":{\"keccak256\":\"0xaf0ba65db834ee52fc7ce5e654c42cb78806d6bc601c77218ea19d645bf35932\",\"urls\":[\"bzzr://ac1ed230a49ff26f19ac337673b13805348237e5cc51c92666c73435823bc4d6\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/interfaces/IOwned.sol\":{\"keccak256\":\"0x3bfadfd06a9f37a8687474694252513f00d84ff9074c9d3c69c311d62686e588\",\"urls\":[\"bzzr://b168ba3d91c3119b53b54679bec05592fe124e42f2345e785a4fd08c8225b39e\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/interfaces/ITokenHolder.sol\":{\"keccak256\":\"0x894a791236cbfdc5fd00d2d48f5be0b988d98804b89d9ce3f3c3c90477d590a1\",\"urls\":[\"bzzr://30f405a05448cc0f2efa99e3fc61ff424a8b6c1cee5c2ad05b5542fe41b58b39\"]}},\"version\":1}",
  "bytecode": "0x60c0604052600960808190527f546f6b656e20302e31000000000000000000000000000000000000000000000060a0908152620000409160029190620001cd565b506040805160208101918290526000908190526200006191600391620001cd565b506040805160208101918290526000908190526200008291600491620001cd565b506005805460ff1916905560006006553480156200009f57600080fd5b506040516200103e3803806200103e8339810160409081528151602083015191830151606084015160008054600160a060020a0319163317815592850180519095949094019391929091859185918591108015620000fe575060008251115b15156200016c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f6536396437360000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b825162000181906003906020860190620001cd565b50815162000197906004906020850190620001cd565b506005805460ff191660ff9290921691909117905550503360009081526007602052604090208190556006555062000272915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200021057805160ff191683800117855562000240565b8280016001018555821562000240579182015b828111156200024057825182559160200191906001019062000223565b506200024e92915062000252565b5090565b6200026f91905b808211156200024e576000815560010162000259565b90565b610dbc80620002826000396000f3006080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df578063095ea7b31461016957806318160ddd146101a157806323b872dd146101c8578063313ce567146101f25780635a3b7e421461021d5780635e35359e1461023257806370a082311461025e57806379ba50971461027f5780638da5cb5b1461029457806395d89b41146102c5578063a9059cbb146102da578063d4ee1d90146102fe578063dd62ed3e14610313578063f2fde38b1461033a575b600080fd5b3480156100eb57600080fd5b506100f461035b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b5061018d600160a060020a03600435166024356103e9565b604080519115158252519081900360200190f35b3480156101ad57600080fd5b506101b6610526565b60408051918252519081900360200190f35b3480156101d457600080fd5b5061018d600160a060020a036004358116906024351660443561052c565b3480156101fe57600080fd5b506102076106d9565b6040805160ff9092168252519081900360200190f35b34801561022957600080fd5b506100f46106e2565b34801561023e57600080fd5b5061025c600160a060020a036004358116906024351660443561073a565b005b34801561026a57600080fd5b506101b6600160a060020a0360043516610938565b34801561028b57600080fd5b5061025c61094a565b3480156102a057600080fd5b506102a9610a1d565b60408051600160a060020a039092168252519081900360200190f35b3480156102d157600080fd5b506100f4610a2c565b3480156102e657600080fd5b5061018d600160a060020a0360043516602435610a87565b34801561030a57600080fd5b506102a9610b89565b34801561031f57600080fd5b506101b6600160a060020a0360043581169060243516610b98565b34801561034657600080fd5b5061025c600160a060020a0360043516610bb5565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103e15780601f106103b6576101008083540402835291602001916103e1565b820191906000526020600020905b8154815290600101906020018083116103c457829003601f168201915b505050505081565b600082600160a060020a038116151561043a576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b8215806104685750336000908152600860209081526040808320600160a060020a0388168452909152902054155b15156104be576040805160e560020a62461bcd02815260206004820152600660248201527f3335303363650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b336000818152600860209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065481565b600083600160a060020a038116151561057d576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b83600160a060020a03811615156105cc576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b600160a060020a0386166000908152600860209081526040808320338452909152902054610600908563ffffffff610cac16565b600160a060020a038716600081815260086020908152604080832033845282528083209490945591815260079091522054610641908563ffffffff610cac16565b600160a060020a038088166000908152600760205260408082209390935590871681522054610676908563ffffffff610d0c16565b600160a060020a0380871660008181526007602090815260409182902094909455805188815290519193928a16927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600195945050505050565b60055460ff1681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103e15780601f106103b6576101008083540402835291602001916103e1565b600054600160a060020a0316331461079c576040805160e560020a62461bcd02815260206004820152600660248201527f6537313239330000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b82600160a060020a03811615156107eb576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b82600160a060020a038116151561083a576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b83600160a060020a03811630141561089c576040805160e560020a62461bcd02815260206004820152600660248201527f6665323738630000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b85600160a060020a031663a9059cbb86866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561091857600080fd5b505af115801561092c573d6000803e3d6000fd5b50505050505050505050565b60076020526000908152604090205481565b600154600160a060020a031633146109ac576040805160e560020a62461bcd02815260206004820152600660248201527f6639373561650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103e15780601f106103b6576101008083540402835291602001916103e1565b600082600160a060020a0381161515610ad8576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b33600090815260076020526040902054610af8908463ffffffff610cac16565b3360009081526007602052604080822092909255600160a060020a03861681522054610b2a908463ffffffff610d0c16565b600160a060020a0385166000818152600760209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b600154600160a060020a031681565b600860209081526000928352604080842090915290825290205481565b600054600160a060020a03163314610c17576040805160e560020a62461bcd02815260206004820152600660248201527f6537313239330000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600054600160a060020a0382811691161415610c7d576040805160e560020a62461bcd02815260206004820152600660248201527f6632306333390000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600081831015610d06576040805160e560020a62461bcd02815260206004820152600660248201527f3530646533390000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b50900390565b600082820183811015610d69576040805160e560020a62461bcd02815260206004820152600660248201527f3232613836390000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b939250505056003335373839660000000000000000000000000000000000000000000000000000a165627a7a7230582022567ca37dc962465cfe05fe989279c69505aba115d0b6b130187d5a45c18be30029",
  "deployedBytecode": "0x6080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df578063095ea7b31461016957806318160ddd146101a157806323b872dd146101c8578063313ce567146101f25780635a3b7e421461021d5780635e35359e1461023257806370a082311461025e57806379ba50971461027f5780638da5cb5b1461029457806395d89b41146102c5578063a9059cbb146102da578063d4ee1d90146102fe578063dd62ed3e14610313578063f2fde38b1461033a575b600080fd5b3480156100eb57600080fd5b506100f461035b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b5061018d600160a060020a03600435166024356103e9565b604080519115158252519081900360200190f35b3480156101ad57600080fd5b506101b6610526565b60408051918252519081900360200190f35b3480156101d457600080fd5b5061018d600160a060020a036004358116906024351660443561052c565b3480156101fe57600080fd5b506102076106d9565b6040805160ff9092168252519081900360200190f35b34801561022957600080fd5b506100f46106e2565b34801561023e57600080fd5b5061025c600160a060020a036004358116906024351660443561073a565b005b34801561026a57600080fd5b506101b6600160a060020a0360043516610938565b34801561028b57600080fd5b5061025c61094a565b3480156102a057600080fd5b506102a9610a1d565b60408051600160a060020a039092168252519081900360200190f35b3480156102d157600080fd5b506100f4610a2c565b3480156102e657600080fd5b5061018d600160a060020a0360043516602435610a87565b34801561030a57600080fd5b506102a9610b89565b34801561031f57600080fd5b506101b6600160a060020a0360043581169060243516610b98565b34801561034657600080fd5b5061025c600160a060020a0360043516610bb5565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103e15780601f106103b6576101008083540402835291602001916103e1565b820191906000526020600020905b8154815290600101906020018083116103c457829003601f168201915b505050505081565b600082600160a060020a038116151561043a576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b8215806104685750336000908152600860209081526040808320600160a060020a0388168452909152902054155b15156104be576040805160e560020a62461bcd02815260206004820152600660248201527f3335303363650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b336000818152600860209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065481565b600083600160a060020a038116151561057d576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b83600160a060020a03811615156105cc576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b600160a060020a0386166000908152600860209081526040808320338452909152902054610600908563ffffffff610cac16565b600160a060020a038716600081815260086020908152604080832033845282528083209490945591815260079091522054610641908563ffffffff610cac16565b600160a060020a038088166000908152600760205260408082209390935590871681522054610676908563ffffffff610d0c16565b600160a060020a0380871660008181526007602090815260409182902094909455805188815290519193928a16927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600195945050505050565b60055460ff1681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103e15780601f106103b6576101008083540402835291602001916103e1565b600054600160a060020a0316331461079c576040805160e560020a62461bcd02815260206004820152600660248201527f6537313239330000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b82600160a060020a03811615156107eb576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b82600160a060020a038116151561083a576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b83600160a060020a03811630141561089c576040805160e560020a62461bcd02815260206004820152600660248201527f6665323738630000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b85600160a060020a031663a9059cbb86866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561091857600080fd5b505af115801561092c573d6000803e3d6000fd5b50505050505050505050565b60076020526000908152604090205481565b600154600160a060020a031633146109ac576040805160e560020a62461bcd02815260206004820152600660248201527f6639373561650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103e15780601f106103b6576101008083540402835291602001916103e1565b600082600160a060020a0381161515610ad8576040805160e560020a62461bcd0281526020600482015260066024820152600080516020610d71833981519152604482015290519081900360640190fd5b33600090815260076020526040902054610af8908463ffffffff610cac16565b3360009081526007602052604080822092909255600160a060020a03861681522054610b2a908463ffffffff610d0c16565b600160a060020a0385166000818152600760209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b600154600160a060020a031681565b600860209081526000928352604080842090915290825290205481565b600054600160a060020a03163314610c17576040805160e560020a62461bcd02815260206004820152600660248201527f6537313239330000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600054600160a060020a0382811691161415610c7d576040805160e560020a62461bcd02815260206004820152600660248201527f6632306333390000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600081831015610d06576040805160e560020a62461bcd02815260206004820152600660248201527f3530646533390000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b50900390565b600082820183811015610d69576040805160e560020a62461bcd02815260206004820152600660248201527f3232613836390000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b939250505056003335373839660000000000000000000000000000000000000000000000000000a165627a7a7230582022567ca37dc962465cfe05fe989279c69505aba115d0b6b130187d5a45c18be30029",
  "sourceMap": "264:36:33:-;278:447:5;264:36:33;;278:447:5;264:36:33;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;306:23:33;;;;;;;;;;-1:-1:-1;306:23:33;;;;;;;;;:::i;:::-;-1:-1:-1;335:25:33;;;;;;;;;;-1:-1:-1;335:25:33;;;;;;;;;:::i;:::-;-1:-1:-1;366:25:33;;;-1:-1:-1;;366:25:33;;;390:1;397:30;;433:289:5;5:2:-1;;;;30:1;27;20:12;5:2;433:289:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:5:45;:18;;-1:-1:-1;;;;;;530:18:45;538:10;530:18;;;433:289:5;;;1494:19:33;;433:289:5;;;;;;;;;;;;;;;;;-1:-1:-1;1494:52:33;;;;;1545:1;1527:7;1521:21;:25;1494:52;1486:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1586:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1608:16:33;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1634:8:33;:20;;-1:-1:-1;;1634:20:33;;;;;;;;;;;;-1:-1:-1;;594:10:5;-1:-1:-1;584:21:5;;;:9;:21;;;;;:31;;;665:11;:21;-1:-1:-1;278:447:5;;-1:-1:-1;;278:447:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;278:447:5;;;-1:-1:-1;278:447:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "278:447:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;306:23:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;306:23:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;306:23:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3720:469;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3720:469:33;-1:-1:-1;;;;;3720:469:33;;;;;;;;;;;;;;;;;;;;;;;;;397:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;397:30:33;;;;;;;;;;;;;;;;;;;;2618:432;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2618:432:33;-1:-1:-1;;;;;2618:432:33;;;;;;;;;;;;366:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;366:25:33;;;;;;;;;;;;;;;;;;;;;;;264:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;264:36:33;;;;1215:252:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1215:252:47;-1:-1:-1;;;;;1215:252:47;;;;;;;;;;;;;;433:45:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;433:45:33;-1:-1:-1;;;;;433:45:33;;;;;1152:192:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1152:192:45;;;;161:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;161:20:45;;;;;;;;-1:-1:-1;;;;;161:20:45;;;;;;;;;;;;;;335:25:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;335:25:33;;;;1943:319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1943:319:33;-1:-1:-1;;;;;1943:319:33;;;;;;;187:23:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;187:23:45;;;;484:66:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;484:66:33;-1:-1:-1;;;;;484:66:33;;;;;;;;;;919:147:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;919:147:45;-1:-1:-1;;;;;919:147:45;;;;;306:23:33;;;;;;;;;;;;;;;-1:-1:-1;;306:23:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3720:469::-;3834:12;3807:8;-1:-1:-1;;;;;448:22:48;;;;440:41;;;;;-1:-1:-1;;;;;440:41:48;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;440:41:48;;;;;;;;;;;;;;;3995:11:33;;;:51;;-1:-1:-1;4020:10:33;4010:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;4010:31:33;;;;;;;;;;:36;3995:51;3987:70;;;;;;;-1:-1:-1;;;;;3987:70:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;4078:10;4068:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;4068:31:33;;;;;;;;;;;;:40;;;4123:38;;;;;;;4068:31;;4078:10;4123:38;;;;;;;;;;;-1:-1:-1;4178:4:33;;3720:469;-1:-1:-1;;;3720:469:33:o;397:30::-;;;;:::o;2618:432::-;2770:12;2720:5;-1:-1:-1;;;;;448:22:48;;;;440:41;;;;;-1:-1:-1;;;;;440:41:48;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;440:41:48;;;;;;;;;;;;;;;2748:3:33;-1:-1:-1;;;;;448:22:48;;;;440:41;;;;;-1:-1:-1;;;;;440:41:48;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;440:41:48;;;;;;;;;;;;;;;-1:-1:-1;;;;;2829:16:33;;;;;;:9;:16;;;;;;;;2846:10;2829:28;;;;;;;;:40;;2862:6;2829:40;:32;:40;:::i;:::-;-1:-1:-1;;;;;2798:16:33;;;;;;:9;:16;;;;;;;;2815:10;2798:28;;;;;;;:71;;;;2898:16;;;:9;:16;;;;;:28;;2919:6;2898:28;:20;:28;:::i;:::-;-1:-1:-1;;;;;2879:16:33;;;;;;;:9;:16;;;;;;:47;;;;2953:14;;;;;;;:26;;2972:6;2953:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;2936:14:33;;;;;;;:9;:14;;;;;;;;;:43;;;;2994:28;;;;;;;2936:14;;2994:28;;;;;;;;;;;;;-1:-1:-1;3039:4:33;;2618:432;-1:-1:-1;;;;;2618:432:33:o;366:25::-;;;;;;:::o;264:36::-;;;;;;;;;;;;;;-1:-1:-1;;264:36:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:252:47;654:5:45;;-1:-1:-1;;;;;654:5:45;640:10;:19;632:38;;;;;-1:-1:-1;;;;;632:38:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:6:47;-1:-1:-1;;;;;448:22:48;;;;440:41;;;;;-1:-1:-1;;;;;440:41:48;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;440:41:48;;;;;;;;;;;;;;;1372:3:47;-1:-1:-1;;;;;448:22:48;;;;440:41;;;;;-1:-1:-1;;;;;440:41:48;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;440:41:48;;;;;;;;;;;;;;;1393:3:47;-1:-1:-1;;;;;631:25:48;;651:4;631:25;;623:44;;;;;-1:-1:-1;;;;;623:44:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:6:47;-1:-1:-1;;;;;1412:34:47;;1447:3;1452:7;1412:48;;;;;;;;;;;;;-1:-1:-1;;;;;1412:48:47;-1:-1:-1;;;;;1412:48:47;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1412:48:47;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1412:48:47;;;;491:1:48;;680::45;1215:252:47;;;:::o;433:45:33:-;;;;;;;;;;;;;:::o;1152:192:45:-;1218:8;;-1:-1:-1;;;;;1218:8:45;1204:10;:22;1196:41;;;;;-1:-1:-1;;;;;1196:41:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;1271:8;;;1264:5;;1252:28;;-1:-1:-1;;;;;1271:8:45;;;;1264:5;;;;1252:28;;;1298:8;;;;1290:16;;-1:-1:-1;;1290:16:45;;;-1:-1:-1;;;;;1298:8:45;;1290:16;;;;1316:21;;;1152:192::o;161:20::-;;;-1:-1:-1;;;;;161:20:45;;:::o;335:25:33:-;;;;;;;;;;;;;;;-1:-1:-1;;335:25:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1943:319;2048:12;2026:3;-1:-1:-1;;;;;448:22:48;;;;440:41;;;;;-1:-1:-1;;;;;440:41:48;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;440:41:48;;;;;;;;;;;;;;;2110:10:33;2100:21;;;;:9;:21;;;;;;:33;;2126:6;2100:33;:25;:33;:::i;:::-;2086:10;2076:21;;;;:9;:21;;;;;;:57;;;;-1:-1:-1;;;;;2160:14:33;;;;;;:26;;2179:6;2160:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;2143:14:33;;;;;;:9;:14;;;;;;;;;:43;;;;2201:33;;;;;;;2143:14;;2210:10;;2201:33;;;;;;;;;;-1:-1:-1;2251:4:33;;1943:319;-1:-1:-1;;;1943:319:33:o;187:23:45:-;;;-1:-1:-1;;;;;187:23:45;;:::o;484:66:33:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;919:147:45:-;654:5;;-1:-1:-1;;;;;654:5:45;640:10;:19;632:38;;;;;-1:-1:-1;;;;;632:38:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;1013:5;;-1:-1:-1;;;;;1000:18:45;;;1013:5;;1000:18;;992:37;;;;;-1:-1:-1;;;;;992:37:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:8;:20;;-1:-1:-1;;1039:20:45;-1:-1:-1;;;;;1039:20:45;;;;;;;;;;919:147::o;665:137:46:-;725:7;752:8;;;;744:27;;;;;-1:-1:-1;;;;;744:27:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;788:7:46;;;665:137::o;307:159::-;367:7;398;;;423;;;;415:26;;;;;-1:-1:-1;;;;;415:26:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:1;307:159;-1:-1:-1;;;307:159:46:o",
  "source": "pragma solidity ^0.4.24;\nimport '../token/ERC20Token.sol';\nimport '../utility/Owned.sol';\nimport '../utility/TokenHolder.sol';\nimport '../utility/SafeMath.sol';\n\n/**\n    @dev Totally fictious money contract, for testing\n\n    'Owned' is specified here for readability reasons\n*/\ncontract FooToken is Owned, ERC20Token, TokenHolder {\n    using SafeMath for uint256;\n\n    /**\n        @dev initializes a new FooToken instance\n    */\n    constructor(string _name, string _symbol, uint8 _decimals, uint256 _supply)\n        public\n        ERC20Token(_name, _symbol, _decimals)\n    {\n        balanceOf[msg.sender] = _supply; // add the value to the account balance\n        totalSupply = _supply; // increase the total supply\n    }\n\n}\n",
  "sourcePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/aux/FooToken.sol",
  "ast": {
    "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/aux/FooToken.sol",
    "exportedSymbols": {
      "FooToken": [
        1990
      ]
    },
    "id": 1991,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1948,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/token/ERC20Token.sol",
        "file": "../token/ERC20Token.sol",
        "id": 1949,
        "nodeType": "ImportDirective",
        "scope": 1991,
        "sourceUnit": 10395,
        "src": "25:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/Owned.sol",
        "file": "../utility/Owned.sol",
        "id": 1950,
        "nodeType": "ImportDirective",
        "scope": 1991,
        "sourceUnit": 11730,
        "src": "59:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/TokenHolder.sol",
        "file": "../utility/TokenHolder.sol",
        "id": 1951,
        "nodeType": "ImportDirective",
        "scope": 1991,
        "sourceUnit": 11884,
        "src": "90:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/SafeMath.sol",
        "file": "../utility/SafeMath.sol",
        "id": 1952,
        "nodeType": "ImportDirective",
        "scope": 1991,
        "sourceUnit": 11837,
        "src": "127:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1953,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11729,
              "src": "299:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$11729",
                "typeString": "contract Owned"
              }
            },
            "id": 1954,
            "nodeType": "InheritanceSpecifier",
            "src": "299:5:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1955,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10394,
              "src": "306:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$10394",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 1956,
            "nodeType": "InheritanceSpecifier",
            "src": "306:10:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1957,
              "name": "TokenHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11883,
              "src": "318:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenHolder_$11883",
                "typeString": "contract TokenHolder"
              }
            },
            "id": 1958,
            "nodeType": "InheritanceSpecifier",
            "src": "318:11:5"
          }
        ],
        "contractDependencies": [
          10394,
          10995,
          11729,
          11883,
          11933,
          12135,
          12151
        ],
        "contractKind": "contract",
        "documentation": "@dev Totally fictious money contract, for testing\n'Owned' is specified here for readability reasons",
        "fullyImplemented": true,
        "id": 1990,
        "linearizedBaseContracts": [
          1990,
          11883,
          10394,
          11933,
          11729,
          12151,
          12135,
          10995
        ],
        "name": "FooToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1961,
            "libraryName": {
              "contractScope": null,
              "id": 1959,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11836,
              "src": "342:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$11836",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "336:27:5",
            "typeName": {
              "id": 1960,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "355:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 1988,
              "nodeType": "Block",
              "src": "574:148:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1977,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          10174
                        ],
                        "referencedDeclaration": 10174,
                        "src": "584:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1980,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1978,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12176,
                          "src": "594:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "594:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "584:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1981,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "608:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "584:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1983,
                  "nodeType": "ExpressionStatement",
                  "src": "584:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1984,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10170
                      ],
                      "referencedDeclaration": 10170,
                      "src": "665:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1985,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "679:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "665:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1987,
                  "nodeType": "ExpressionStatement",
                  "src": "665:21:5"
                }
              ]
            },
            "documentation": "@dev initializes a new FooToken instance",
            "id": 1989,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1972,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1963,
                    "src": "543:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1973,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1965,
                    "src": "550:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1974,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1967,
                    "src": "559:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1975,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1971,
                  "name": "ERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10394,
                  "src": "532:10:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Token_$10394_$",
                    "typeString": "type(contract ERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "532:37:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1963,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "445:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1965,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "459:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1964,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1967,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "475:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1966,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1969,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "492:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "444:64:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:0:5"
            },
            "scope": 1990,
            "src": "433:289:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1991,
        "src": "278:447:5"
      }
    ],
    "src": "0:726:5"
  },
  "legacyAST": {
    "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/aux/FooToken.sol",
    "exportedSymbols": {
      "FooToken": [
        1990
      ]
    },
    "id": 1991,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1948,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/token/ERC20Token.sol",
        "file": "../token/ERC20Token.sol",
        "id": 1949,
        "nodeType": "ImportDirective",
        "scope": 1991,
        "sourceUnit": 10395,
        "src": "25:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/Owned.sol",
        "file": "../utility/Owned.sol",
        "id": 1950,
        "nodeType": "ImportDirective",
        "scope": 1991,
        "sourceUnit": 11730,
        "src": "59:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/TokenHolder.sol",
        "file": "../utility/TokenHolder.sol",
        "id": 1951,
        "nodeType": "ImportDirective",
        "scope": 1991,
        "sourceUnit": 11884,
        "src": "90:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/SafeMath.sol",
        "file": "../utility/SafeMath.sol",
        "id": 1952,
        "nodeType": "ImportDirective",
        "scope": 1991,
        "sourceUnit": 11837,
        "src": "127:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1953,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11729,
              "src": "299:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$11729",
                "typeString": "contract Owned"
              }
            },
            "id": 1954,
            "nodeType": "InheritanceSpecifier",
            "src": "299:5:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1955,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10394,
              "src": "306:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$10394",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 1956,
            "nodeType": "InheritanceSpecifier",
            "src": "306:10:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1957,
              "name": "TokenHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11883,
              "src": "318:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenHolder_$11883",
                "typeString": "contract TokenHolder"
              }
            },
            "id": 1958,
            "nodeType": "InheritanceSpecifier",
            "src": "318:11:5"
          }
        ],
        "contractDependencies": [
          10394,
          10995,
          11729,
          11883,
          11933,
          12135,
          12151
        ],
        "contractKind": "contract",
        "documentation": "@dev Totally fictious money contract, for testing\n'Owned' is specified here for readability reasons",
        "fullyImplemented": true,
        "id": 1990,
        "linearizedBaseContracts": [
          1990,
          11883,
          10394,
          11933,
          11729,
          12151,
          12135,
          10995
        ],
        "name": "FooToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1961,
            "libraryName": {
              "contractScope": null,
              "id": 1959,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11836,
              "src": "342:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$11836",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "336:27:5",
            "typeName": {
              "id": 1960,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "355:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 1988,
              "nodeType": "Block",
              "src": "574:148:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1977,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          10174
                        ],
                        "referencedDeclaration": 10174,
                        "src": "584:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1980,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1978,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12176,
                          "src": "594:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "594:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "584:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1981,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "608:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "584:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1983,
                  "nodeType": "ExpressionStatement",
                  "src": "584:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1984,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10170
                      ],
                      "referencedDeclaration": 10170,
                      "src": "665:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1985,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "679:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "665:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1987,
                  "nodeType": "ExpressionStatement",
                  "src": "665:21:5"
                }
              ]
            },
            "documentation": "@dev initializes a new FooToken instance",
            "id": 1989,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1972,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1963,
                    "src": "543:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1973,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1965,
                    "src": "550:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1974,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1967,
                    "src": "559:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1975,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1971,
                  "name": "ERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10394,
                  "src": "532:10:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Token_$10394_$",
                    "typeString": "type(contract ERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "532:37:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1963,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "445:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1965,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "459:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1964,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1967,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "475:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1966,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1969,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "492:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "444:64:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:0:5"
            },
            "scope": 1990,
            "src": "433:289:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1991,
        "src": "278:447:5"
      }
    ],
    "src": "0:726:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2020-02-26T09:32:34.085Z",
  "devdoc": {
    "methods": {
      "acceptOwnership()": {
        "details": "used by a new owner to accept an ownership transfer"
      },
      "approve(address,uint256)": {
        "details": "allow another account/contract to spend some tokens on your behalf throws on any error rather then return a false flag to minimize user errors also, to minimize the risk of the approve/transferFrom attack vector (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/), approve has to be called twice in 2 separate transactions - once to change the allowance to 0 and secondly to change it to the new allowance value",
        "params": {
          "_spender": "approved address",
          "_value": "allowance amount"
        },
        "return": "true if the approval was successful, false if it wasn't"
      },
      "transfer(address,uint256)": {
        "details": "send coins throws on any error rather then return a false flag to minimize user errors",
        "params": {
          "_to": "target address",
          "_value": "transfer amount"
        },
        "return": "true if the transfer was successful, false if it wasn't"
      },
      "transferFrom(address,address,uint256)": {
        "details": "an account/contract attempts to get the coins throws on any error rather then return a false flag to minimize user errors",
        "params": {
          "_from": "source address",
          "_to": "target address",
          "_value": "transfer amount"
        },
        "return": "true if the transfer was successful, false if it wasn't"
      },
      "transferOwnership(address)": {
        "details": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner",
        "params": {
          "_newOwner": "new contract owner"
        }
      },
      "withdrawTokens(address,address,uint256)": {
        "details": "withdraws tokens held by the contract and sends them to an account can only be called by the owner",
        "params": {
          "_amount": "amount to withdraw",
          "_to": "account to receive the new amount",
          "_token": "ERC20 token contract address"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}