{
  "contractName": "TestERC20Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "standard",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_supply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"allow another account/contract to spend some tokens on your behalf throws on any error rather then return a false flag to minimize user errors also, to minimize the risk of the approve/transferFrom attack vector (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/), approve has to be called twice in 2 separate transactions - once to change the allowance to 0 and secondly to change it to the new allowance value\",\"params\":{\"_spender\":\"approved address\",\"_value\":\"allowance amount\"},\"return\":\"true if the approval was successful, false if it wasn't\"},\"transfer(address,uint256)\":{\"details\":\"send coins throws on any error rather then return a false flag to minimize user errors\",\"params\":{\"_to\":\"target address\",\"_value\":\"transfer amount\"},\"return\":\"true if the transfer was successful, false if it wasn't\"},\"transferFrom(address,address,uint256)\":{\"details\":\"an account/contract attempts to get the coins throws on any error rather then return a false flag to minimize user errors\",\"params\":{\"_from\":\"source address\",\"_to\":\"target address\",\"_value\":\"transfer amount\"},\"return\":\"true if the transfer was successful, false if it wasn't\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/lash/src/ext/sempo/contracts/solidity/contracts/helpers/TestERC20Token.sol\":\"TestERC20Token\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/lash/src/ext/sempo/contracts/solidity/contracts/helpers/TestERC20Token.sol\":{\"keccak256\":\"0x38d6096c479caa6eca0117de232df146893b06c150e81a0f3bde726b413b34cd\",\"urls\":[\"bzzr://da4c1062148ea14513c6eafbb0526c3d373567e6a35651059e1742619c7ff6e7\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/token/ERC20Token.sol\":{\"keccak256\":\"0x01401b75cf9a71036c4f9ae3276ce71d69954faeb0b94780eec6c35c74a5ecc4\",\"urls\":[\"bzzr://ed5d0b31393ab327d58aa05420d6a321dbaf28d438a82b2503ecee5508bafd2e\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/token/interfaces/IERC20Token.sol\":{\"keccak256\":\"0x465f98ed290fb4f65f2d74e938f47c2fa9f7302e766266d8f9326d4c703d5ce3\",\"urls\":[\"bzzr://9746fbda9ee3a4d1e0ed3c5f5d27ebb93114139ad29ae04f313de057f9d1bc92\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/SafeMath.sol\":{\"keccak256\":\"0x385d831e4117feb02404ed5d061fbc86f4870b48aa831ae1985bf0508a18b201\",\"urls\":[\"bzzr://64f79e24c11751864d5708d8ca216e975cc3461601cee31b70941c2559419d55\"]},\"/home/lash/src/ext/sempo/contracts/solidity/contracts/utility/Utils.sol\":{\"keccak256\":\"0xaf0ba65db834ee52fc7ce5e654c42cb78806d6bc601c77218ea19d645bf35932\",\"urls\":[\"bzzr://ac1ed230a49ff26f19ac337673b13805348237e5cc51c92666c73435823bc4d6\"]}},\"version\":1}",
  "bytecode": "0x60c0604052600960808190527f546f6b656e20302e31000000000000000000000000000000000000000000000060a090815261003e91600091906101a3565b5060408051602081019182905260009081905261005d916001916101a3565b5060408051602081019182905260009081905261007c916002916101a3565b506003805460ff19169055600060045534801561009857600080fd5b50604051610b43380380610b43833981016040908152815160208301519183015190830180519093929092019183908390600090811080156100db575060008251115b151561014857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f6536396437360000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b825161015b9060019060208601906101a3565b50815161016f9060029060208501906101a3565b506003805460ff191660ff9290921691909117905550506004819055336000908152600560205260409020555061023e9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101e457805160ff1916838001178555610211565b82800160010185558215610211579182015b828111156102115782518255916020019190600101906101f6565b5061021d929150610221565b5090565b61023b91905b8082111561021d5760008155600101610227565b90565b6108f68061024d6000396000f3006080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016a57806323b872dd14610191578063313ce567146101bb5780635a3b7e42146101e657806370a08231146101fb57806395d89b411461021c578063a9059cbb14610231578063dd62ed3e14610255575b600080fd5b3480156100b457600080fd5b506100bd61027c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a0360043516602435610309565b604080519115158252519081900360200190f35b34801561017657600080fd5b5061017f610446565b60408051918252519081900360200190f35b34801561019d57600080fd5b50610156600160a060020a036004358116906024351660443561044c565b3480156101c757600080fd5b506101d06105f9565b6040805160ff9092168252519081900360200190f35b3480156101f257600080fd5b506100bd610602565b34801561020757600080fd5b5061017f600160a060020a036004351661065d565b34801561022857600080fd5b506100bd61066f565b34801561023d57600080fd5b50610156600160a060020a03600435166024356106c7565b34801561026157600080fd5b5061017f600160a060020a03600435811690602435166107c9565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103015780601f106102d657610100808354040283529160200191610301565b820191906000526020600020905b8154815290600101906020018083116102e457829003601f168201915b505050505081565b600082600160a060020a038116151561035a576040805160e560020a62461bcd02815260206004820152600660248201526000805160206108ab833981519152604482015290519081900360640190fd5b8215806103885750336000908152600660209081526040808320600160a060020a0388168452909152902054155b15156103de576040805160e560020a62461bcd02815260206004820152600660248201527f3335303363650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b336000818152600660209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60045481565b600083600160a060020a038116151561049d576040805160e560020a62461bcd02815260206004820152600660248201526000805160206108ab833981519152604482015290519081900360640190fd5b83600160a060020a03811615156104ec576040805160e560020a62461bcd02815260206004820152600660248201526000805160206108ab833981519152604482015290519081900360640190fd5b600160a060020a0386166000908152600660209081526040808320338452909152902054610520908563ffffffff6107e616565b600160a060020a038716600081815260066020908152604080832033845282528083209490945591815260059091522054610561908563ffffffff6107e616565b600160a060020a038088166000908152600560205260408082209390935590871681522054610596908563ffffffff61084616565b600160a060020a0380871660008181526005602090815260409182902094909455805188815290519193928a16927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600195945050505050565b60035460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103015780601f106102d657610100808354040283529160200191610301565b60056020526000908152604090205481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103015780601f106102d657610100808354040283529160200191610301565b600082600160a060020a0381161515610718576040805160e560020a62461bcd02815260206004820152600660248201526000805160206108ab833981519152604482015290519081900360640190fd5b33600090815260056020526040902054610738908463ffffffff6107e616565b3360009081526005602052604080822092909255600160a060020a0386168152205461076a908463ffffffff61084616565b600160a060020a0385166000818152600560209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b600660209081526000928352604080842090915290825290205481565b600081831015610840576040805160e560020a62461bcd02815260206004820152600660248201527f3530646533390000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b50900390565b6000828201838110156108a3576040805160e560020a62461bcd02815260206004820152600660248201527f3232613836390000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b939250505056003335373839660000000000000000000000000000000000000000000000000000a165627a7a723058204130dc63ec94ed26c78dd450cecb3b6e6e3e582b7c0f07e98f12a6af9a49ab1f0029",
  "deployedBytecode": "0x6080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016a57806323b872dd14610191578063313ce567146101bb5780635a3b7e42146101e657806370a08231146101fb57806395d89b411461021c578063a9059cbb14610231578063dd62ed3e14610255575b600080fd5b3480156100b457600080fd5b506100bd61027c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a0360043516602435610309565b604080519115158252519081900360200190f35b34801561017657600080fd5b5061017f610446565b60408051918252519081900360200190f35b34801561019d57600080fd5b50610156600160a060020a036004358116906024351660443561044c565b3480156101c757600080fd5b506101d06105f9565b6040805160ff9092168252519081900360200190f35b3480156101f257600080fd5b506100bd610602565b34801561020757600080fd5b5061017f600160a060020a036004351661065d565b34801561022857600080fd5b506100bd61066f565b34801561023d57600080fd5b50610156600160a060020a03600435166024356106c7565b34801561026157600080fd5b5061017f600160a060020a03600435811690602435166107c9565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103015780601f106102d657610100808354040283529160200191610301565b820191906000526020600020905b8154815290600101906020018083116102e457829003601f168201915b505050505081565b600082600160a060020a038116151561035a576040805160e560020a62461bcd02815260206004820152600660248201526000805160206108ab833981519152604482015290519081900360640190fd5b8215806103885750336000908152600660209081526040808320600160a060020a0388168452909152902054155b15156103de576040805160e560020a62461bcd02815260206004820152600660248201527f3335303363650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b336000818152600660209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60045481565b600083600160a060020a038116151561049d576040805160e560020a62461bcd02815260206004820152600660248201526000805160206108ab833981519152604482015290519081900360640190fd5b83600160a060020a03811615156104ec576040805160e560020a62461bcd02815260206004820152600660248201526000805160206108ab833981519152604482015290519081900360640190fd5b600160a060020a0386166000908152600660209081526040808320338452909152902054610520908563ffffffff6107e616565b600160a060020a038716600081815260066020908152604080832033845282528083209490945591815260059091522054610561908563ffffffff6107e616565b600160a060020a038088166000908152600560205260408082209390935590871681522054610596908563ffffffff61084616565b600160a060020a0380871660008181526005602090815260409182902094909455805188815290519193928a16927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600195945050505050565b60035460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103015780601f106102d657610100808354040283529160200191610301565b60056020526000908152604090205481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103015780601f106102d657610100808354040283529160200191610301565b600082600160a060020a0381161515610718576040805160e560020a62461bcd02815260206004820152600660248201526000805160206108ab833981519152604482015290519081900360640190fd5b33600090815260056020526040902054610738908463ffffffff6107e616565b3360009081526005602052604080822092909255600160a060020a0386168152205461076a908463ffffffff61084616565b600160a060020a0385166000818152600560209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b600660209081526000928352604080842090915290825290205481565b600081831015610840576040805160e560020a62461bcd02815260206004820152600660248201527f3530646533390000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b50900390565b6000828201838110156108a3576040805160e560020a62461bcd02815260206004820152600660248201527f3232613836390000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b939250505056003335373839660000000000000000000000000000000000000000000000000000a165627a7a723058204130dc63ec94ed26c78dd450cecb3b6e6e3e582b7c0f07e98f12a6af9a49ab1f0029",
  "sourceMap": "264:36:33:-;104:241:27;264:36:33;;104:241:27;264:36:33;;;;;;;;;;-1:-1:-1;;264:36:33;;:::i;:::-;-1:-1:-1;306:23:33;;;;;;;;;;-1:-1:-1;306:23:33;;;;;;;;;:::i;:::-;-1:-1:-1;335:25:33;;;;;;;;;;-1:-1:-1;335:25:33;;;;;;;;;:::i;:::-;-1:-1:-1;366:25:33;;;-1:-1:-1;;366:25:33;;;390:1;397:30;;148:195:27;5:2:-1;;;;30:1;27;20:12;5:2;148:195:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:19:33;;148:195:27;;;;;;;;;;;257:1;;1494:23:33;-1:-1:-1;1494:52:33;;;;;1545:1;1527:7;1521:21;:25;1494:52;1486:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1586:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1608:16:33;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1634:8:33;:20;;-1:-1:-1;;1634:20:33;;;;;;;;;;;;-1:-1:-1;;274:11:27;:21;;;315:10;-1:-1:-1;305:21:27;;;:9;:21;;;;;:31;-1:-1:-1;104:241:27;;-1:-1:-1;104:241:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;104:241:27;;;-1:-1:-1;104:241:27;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "104:241:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;306:23:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;306:23:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;306:23:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3720:469;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3720:469:33;-1:-1:-1;;;;;3720:469:33;;;;;;;;;;;;;;;;;;;;;;;;;397:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;397:30:33;;;;;;;;;;;;;;;;;;;;2618:432;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2618:432:33;-1:-1:-1;;;;;2618:432:33;;;;;;;;;;;;366:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;366:25:33;;;;;;;;;;;;;;;;;;;;;;;264:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;264:36:33;;;;433:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;433:45:33;-1:-1:-1;;;;;433:45:33;;;;;335:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;335:25:33;;;;1943:319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1943:319:33;-1:-1:-1;;;;;1943:319:33;;;;;;;484:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;484:66:33;-1:-1:-1;;;;;484:66:33;;;;;;;;;;306:23;;;;;;;;;;;;;;;-1:-1:-1;;306:23:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3720:469::-;3834:12;3807:8;-1:-1:-1;;;;;448:22:48;;;;440:41;;;;;-1:-1:-1;;;;;440:41:48;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;440:41:48;;;;;;;;;;;;;;;3995:11:33;;;:51;;-1:-1:-1;4020:10:33;4010:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;4010:31:33;;;;;;;;;;:36;3995:51;3987:70;;;;;;;-1:-1:-1;;;;;3987:70:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;4078:10;4068:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;4068:31:33;;;;;;;;;;;;:40;;;4123:38;;;;;;;4068:31;;4078:10;4123:38;;;;;;;;;;;-1:-1:-1;4178:4:33;;3720:469;-1:-1:-1;;;3720:469:33:o;397:30::-;;;;:::o;2618:432::-;2770:12;2720:5;-1:-1:-1;;;;;448:22:48;;;;440:41;;;;;-1:-1:-1;;;;;440:41:48;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;440:41:48;;;;;;;;;;;;;;;2748:3:33;-1:-1:-1;;;;;448:22:48;;;;440:41;;;;;-1:-1:-1;;;;;440:41:48;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;440:41:48;;;;;;;;;;;;;;;-1:-1:-1;;;;;2829:16:33;;;;;;:9;:16;;;;;;;;2846:10;2829:28;;;;;;;;:40;;2862:6;2829:40;:32;:40;:::i;:::-;-1:-1:-1;;;;;2798:16:33;;;;;;:9;:16;;;;;;;;2815:10;2798:28;;;;;;;:71;;;;2898:16;;;:9;:16;;;;;:28;;2919:6;2898:28;:20;:28;:::i;:::-;-1:-1:-1;;;;;2879:16:33;;;;;;;:9;:16;;;;;;:47;;;;2953:14;;;;;;;:26;;2972:6;2953:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;2936:14:33;;;;;;;:9;:14;;;;;;;;;:43;;;;2994:28;;;;;;;2936:14;;2994:28;;;;;;;;;;;;;-1:-1:-1;3039:4:33;;2618:432;-1:-1:-1;;;;;2618:432:33:o;366:25::-;;;;;;:::o;264:36::-;;;;;;;;;;;;;;;-1:-1:-1;;264:36:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:45;;;;;;;;;;;;;:::o;335:25::-;;;;;;;;;;;;;;-1:-1:-1;;335:25:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1943:319;2048:12;2026:3;-1:-1:-1;;;;;448:22:48;;;;440:41;;;;;-1:-1:-1;;;;;440:41:48;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;440:41:48;;;;;;;;;;;;;;;2110:10:33;2100:21;;;;:9;:21;;;;;;:33;;2126:6;2100:33;:25;:33;:::i;:::-;2086:10;2076:21;;;;:9;:21;;;;;;:57;;;;-1:-1:-1;;;;;2160:14:33;;;;;;:26;;2179:6;2160:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;2143:14:33;;;;;;:9;:14;;;;;;;;;:43;;;;2201:33;;;;;;;2143:14;;2210:10;;2201:33;;;;;;;;;;-1:-1:-1;2251:4:33;;1943:319;-1:-1:-1;;;1943:319:33:o;484:66::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;665:137:46:-;725:7;752:8;;;;744:27;;;;;-1:-1:-1;;;;;744:27:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;788:7:46;;;665:137::o;307:159::-;367:7;398;;;423;;;;415:26;;;;;-1:-1:-1;;;;;415:26:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:1;307:159;-1:-1:-1;;;307:159:46:o",
  "source": "pragma solidity ^0.4.24;\nimport '../token/ERC20Token.sol';\n\n/*\n    Test token with predefined supply\n*/\ncontract TestERC20Token is ERC20Token {\n    constructor(string _name, string _symbol, uint256 _supply)\n        public\n        ERC20Token(_name, _symbol, 0)\n    {\n        totalSupply = _supply;\n        balanceOf[msg.sender] = _supply;\n    }\n}\n",
  "sourcePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/helpers/TestERC20Token.sol",
  "ast": {
    "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/helpers/TestERC20Token.sol",
    "exportedSymbols": {
      "TestERC20Token": [
        9895
      ]
    },
    "id": 9896,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9865,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:27"
      },
      {
        "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/token/ERC20Token.sol",
        "file": "../token/ERC20Token.sol",
        "id": 9866,
        "nodeType": "ImportDirective",
        "scope": 9896,
        "sourceUnit": 10395,
        "src": "25:33:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9867,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10394,
              "src": "131:10:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$10394",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 9868,
            "nodeType": "InheritanceSpecifier",
            "src": "131:10:27"
          }
        ],
        "contractDependencies": [
          10394,
          10995,
          11933
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9895,
        "linearizedBaseContracts": [
          9895,
          10394,
          11933,
          10995
        ],
        "name": "TestERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9893,
              "nodeType": "Block",
              "src": "264:79:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9882,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10170
                      ],
                      "referencedDeclaration": 10170,
                      "src": "274:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9883,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9874,
                      "src": "288:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "274:21:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9885,
                  "nodeType": "ExpressionStatement",
                  "src": "274:21:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9886,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          10174
                        ],
                        "referencedDeclaration": 10174,
                        "src": "305:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 9889,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12176,
                          "src": "315:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "315:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "305:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9890,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9874,
                      "src": "329:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "305:31:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9892,
                  "nodeType": "ExpressionStatement",
                  "src": "305:31:27"
                }
              ]
            },
            "documentation": null,
            "id": 9894,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9877,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9870,
                    "src": "241:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 9878,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9872,
                    "src": "248:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 9879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "257:1:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 9880,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9876,
                  "name": "ERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10394,
                  "src": "230:10:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Token_$10394_$",
                    "typeString": "type(contract ERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "230:29:27"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9870,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 9894,
                  "src": "160:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9869,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9872,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 9894,
                  "src": "174:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9871,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "174:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9874,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 9894,
                  "src": "190:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "159:47:27"
            },
            "payable": false,
            "returnParameters": {
              "id": 9881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "264:0:27"
            },
            "scope": 9895,
            "src": "148:195:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 9896,
        "src": "104:241:27"
      }
    ],
    "src": "0:346:27"
  },
  "legacyAST": {
    "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/helpers/TestERC20Token.sol",
    "exportedSymbols": {
      "TestERC20Token": [
        9895
      ]
    },
    "id": 9896,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9865,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:27"
      },
      {
        "absolutePath": "/home/lash/src/ext/sempo/contracts/solidity/contracts/token/ERC20Token.sol",
        "file": "../token/ERC20Token.sol",
        "id": 9866,
        "nodeType": "ImportDirective",
        "scope": 9896,
        "sourceUnit": 10395,
        "src": "25:33:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9867,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10394,
              "src": "131:10:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$10394",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 9868,
            "nodeType": "InheritanceSpecifier",
            "src": "131:10:27"
          }
        ],
        "contractDependencies": [
          10394,
          10995,
          11933
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9895,
        "linearizedBaseContracts": [
          9895,
          10394,
          11933,
          10995
        ],
        "name": "TestERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9893,
              "nodeType": "Block",
              "src": "264:79:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9882,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10170
                      ],
                      "referencedDeclaration": 10170,
                      "src": "274:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9883,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9874,
                      "src": "288:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "274:21:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9885,
                  "nodeType": "ExpressionStatement",
                  "src": "274:21:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9886,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          10174
                        ],
                        "referencedDeclaration": 10174,
                        "src": "305:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 9889,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12176,
                          "src": "315:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "315:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "305:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9890,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9874,
                      "src": "329:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "305:31:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9892,
                  "nodeType": "ExpressionStatement",
                  "src": "305:31:27"
                }
              ]
            },
            "documentation": null,
            "id": 9894,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9877,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9870,
                    "src": "241:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 9878,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9872,
                    "src": "248:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 9879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "257:1:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 9880,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9876,
                  "name": "ERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10394,
                  "src": "230:10:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Token_$10394_$",
                    "typeString": "type(contract ERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "230:29:27"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9870,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 9894,
                  "src": "160:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9869,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9872,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 9894,
                  "src": "174:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9871,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "174:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9874,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 9894,
                  "src": "190:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "159:47:27"
            },
            "payable": false,
            "returnParameters": {
              "id": 9881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "264:0:27"
            },
            "scope": 9895,
            "src": "148:195:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 9896,
        "src": "104:241:27"
      }
    ],
    "src": "0:346:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2020-02-26T09:32:34.245Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "allow another account/contract to spend some tokens on your behalf throws on any error rather then return a false flag to minimize user errors also, to minimize the risk of the approve/transferFrom attack vector (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/), approve has to be called twice in 2 separate transactions - once to change the allowance to 0 and secondly to change it to the new allowance value",
        "params": {
          "_spender": "approved address",
          "_value": "allowance amount"
        },
        "return": "true if the approval was successful, false if it wasn't"
      },
      "transfer(address,uint256)": {
        "details": "send coins throws on any error rather then return a false flag to minimize user errors",
        "params": {
          "_to": "target address",
          "_value": "transfer amount"
        },
        "return": "true if the transfer was successful, false if it wasn't"
      },
      "transferFrom(address,address,uint256)": {
        "details": "an account/contract attempts to get the coins throws on any error rather then return a false flag to minimize user errors",
        "params": {
          "_from": "source address",
          "_to": "target address",
          "_value": "transfer amount"
        },
        "return": "true if the transfer was successful, false if it wasn't"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}